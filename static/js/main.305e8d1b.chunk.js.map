{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.jsx","Utils/getRandomColor.js","components/Profile/Profile.jsx","components/FriendList/FriendLits.jsx","components/App.jsx","index.js"],"names":["module","exports","Statistics","title","stats","className","css","statistics","statList","map","id","label","percentage","item","style","backgroundColor","Math","floor","random","toString","Profile","name","tag","location","avatar","profile","description","src","alt","quantity","followers","views","likes","FriendList","friends","friendList","friend","isOnline","offline","width","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.305e8d1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__zirta\",\"description\":\"Profile_description__3eu0S\",\"avatar\":\"Profile_avatar__3PzZ5\",\"name\":\"Profile_name__XVRIh\",\"tag\":\"Profile_tag__3T59r\",\"location\":\"Profile_location__3C6LQ\",\"stats\":\"Profile_stats__2TPj8\",\"label\":\"Profile_label__3oM9g\",\"quantity\":\"Profile_quantity__Xse3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__WjEYj\",\"title\":\"Statistics_title__3MBA8\",\"statList\":\"Statistics_statList__1ftbh\",\"label\":\"Statistics_label__1N_CZ\",\"percentage\":\"Statistics_percentage__2lW1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2K7OF\",\"item\":\"FriendList_item__3hTdF\",\"status\":\"FriendList_status__3RQU5\",\"isOnline\":\"FriendList_isOnline__qz1AQ FriendList_status__3RQU5\",\"offline\":\"FriendList_offline__2WMHN FriendList_status__3RQU5\",\"avatar\":\"FriendList_avatar__2Sbb5\",\"name\":\"FriendList_name__9vMXe\"};","import PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\nimport { getRandomColor } from '../../Utils/getRandomColor';\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <section className={css.statistics}>\n      {title && <h2 className={css.title}>{title}</h2>}\n\n      <ul className={css.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            key={id}\n            className={css.item}\n            style={{ backgroundColor: getRandomColor() }}\n          >\n            <span className={css.label}>{label}</span>\n            <span className={css.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","export const getRandomColor = () => {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n};\n","import PropTypes from 'prop-types';\nimport css from './Profile.module.css';\n\nexport const Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={css.profile}>\n      <div className={css.description}>\n        <img src={avatar} alt={name} className={css.avatar} />\n        <p className={css.name}>{name}</p>\n        <p className={css.tag}>@{tag}</p>\n        <p className={css.location}>{location}</p>\n      </div>\n\n      <ul className={css.stats}>\n        <li>\n          <span className={css.label}>Followers</span>\n          <span className={css.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={css.label}>Views</span>\n          <span className={css.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={css.label}>Likes</span>\n          <span className={css.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport css from './FriendList.module.css';\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <ul className={css.friendList}>\n      {friends.map(friend => (\n        <li key={friend.id} className={css.item}>\n          <span className={friend.isOnline ? css.isOnline : css.offline}></span>\n          <img className={css.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\n          <p className={css.name}>{friend.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number,\n    }),\n  ),\n};\n","import friends from '../friends.json';\nimport user from '../user.json';\nimport statisticalData from '../statistical-data.json';\n\nimport { Statistics } from './Statistics/Statistics';\nimport { Profile } from './Profile/Profile';\nimport { FriendList } from './FriendList/FriendLits';\n\nexport const App = () => {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />,\n      <Statistics stats={statisticalData} />,\n      <FriendList friends={friends} />,\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}